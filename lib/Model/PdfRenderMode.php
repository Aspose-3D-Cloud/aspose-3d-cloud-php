<?php
/**
 * PdfRenderMode
 *
 * PHP version 5
 *
 * @category Class
 * @package  Aspose\ThreeD\Cloud
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Aspose.3D Cloud API Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Aspose\ThreeD\Cloud\Model;
use \Aspose\ThreeD\Cloud\ObjectSerializer;

/**
 * PdfRenderMode Class Doc Comment
 *
 * @category Class
 * @description Render mode specifies the style in which the 3D artwork is rendered.
 * @package  Aspose\ThreeD\Cloud
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PdfRenderMode
{
    /**
     * Possible values of this enum
     */
    const Solid = 0;
    const SolidWireframe = 1;
    const Transparent = 2;
    const TransparentWireframe = 3;
    const BoundingBox = 4;
    const TransparentBoundingBox = 5;
    const TransparentBoundingBoxOutline = 6;
    const Wireframe = 7;
    const ShadedWireframe = 8;
    const HiddenWireframe = 9;
    const Vertices = 10;
    const ShadedVertices = 11;
    const Illustration = 12;
    const SolidOutline = 13;
    const ShadedIllustration = 14;
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::Solid,
            self::SolidWireframe,
            self::Transparent,
            self::TransparentWireframe,
            self::BoundingBox,
            self::TransparentBoundingBox,
            self::TransparentBoundingBoxOutline,
            self::Wireframe,
            self::ShadedWireframe,
            self::HiddenWireframe,
            self::Vertices,
            self::ShadedVertices,
            self::Illustration,
            self::SolidOutline,
            self::ShadedIllustration,
        ];
    }
}


